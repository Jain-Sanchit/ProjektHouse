[{"/home/sanchit/projektHouse/server/client/src/index.js":"1","/home/sanchit/projektHouse/server/client/src/reducers/userReducer.js":"2","/home/sanchit/projektHouse/server/client/src/components/screens/Profile.js":"3","/home/sanchit/projektHouse/server/client/src/components/screens/CreatePost.js":"4","/home/sanchit/projektHouse/server/client/src/components/screens/Home.js":"5","/home/sanchit/projektHouse/server/client/src/components/screens/UserProfile.js":"6","/home/sanchit/projektHouse/server/client/src/components/screens/SubsPosts.js":"7","/home/sanchit/projektHouse/server/client/src/components/Navbar.js":"8","/home/sanchit/projektHouse/server/client/src/components/screens/Login.js":"9","/home/sanchit/projektHouse/server/client/src/components/screens/Register.js":"10"},{"size":500,"mtime":1606122844867,"results":"11","hashOfConfig":"12"},{"size":480,"mtime":1619196415687,"results":"13","hashOfConfig":"12"},{"size":11227,"mtime":1619521783107,"results":"14","hashOfConfig":"12"},{"size":4016,"mtime":1619521788387,"results":"15","hashOfConfig":"12"},{"size":8912,"mtime":1619521780327,"results":"16","hashOfConfig":"12"},{"size":12162,"mtime":1619521787867,"results":"17","hashOfConfig":"12"},{"size":6945,"mtime":1619521786159,"results":"18","hashOfConfig":"12"},{"size":4203,"mtime":1619511193217,"results":"19","hashOfConfig":"12"},{"size":3369,"mtime":1619196424803,"results":"20","hashOfConfig":"12"},{"size":4648,"mtime":1619511061536,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1bdd0nd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sanchit/projektHouse/server/client/src/index.js",[],["50","51"],"/home/sanchit/projektHouse/server/client/src/reducers/userReducer.js",[],["52","53"],"/home/sanchit/projektHouse/server/client/src/components/screens/Profile.js",["54","55","56","57","58","59","60","61","62","63","64","65"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { Link } from \"react-router-dom\";\n\nfunction Profile() {\n  const [data, setData] = useState([]);\n  const [image, setImage] = useState(\"\");\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    fetch(\"/mypost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setData(result.myposts);\n      });\n  }, []);\n  useEffect(() => {\n    if (image) {\n      const data = new FormData();\n      data.append(\"file\", image);\n      data.append(\"upload_preset\", \"projekthouse\");\n      data.append(\"cloud_name\", \"jainsanchit\");\n      fetch(\"https://api.cloudinary.com/v1_1/jainsanchit/image/upload\", {\n        method: \"POST\",\n        body: data,\n      })\n        .then((response) => response.json()) // keep it in one line else use return res.json()\n        .then((data) => {\n          fetch(\"/updatepic\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n              pic: data.url,\n            }),\n          })\n            .then((res) => res.json())\n            .then((result) => {\n              localStorage.setItem(\n                \"user\",\n                JSON.stringify({ ...state, pic: result.pic })\n              );\n              dispatch({ type: \"UPDATE_PIC\", payload: result.pic });\n            });\n        })\n        .catch((err) => {\n          console.log(err.response);\n        });\n    }\n  }, [image]);\n  const updatePhoto = (file) => {\n    setImage(file);\n  };\n  const likePost = (id) => {\n    fetch(\"/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (result._id == item._id) return result;\n          else return item;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const unlikePost = (id) => {\n    fetch(\"/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (result._id == item._id) return result;\n          else return item;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const makeComment = (text, postId) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId,\n        text,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (result._id == item._id) return result;\n          else return item;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const deletePost = (postId) => {\n    fetch(`/deletepost/${postId}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.filter((item) => {\n          return item._id != result._id;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const deleteComment = (postId, commentId) => {\n    fetch(`/deletecomment/${postId}/${commentId}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (result._id == item._id) return result;\n          else return item;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <>\n      {state ? (\n        <div className=\"container\" style={{ maxWidth: \"900px\" }}>\n          <div\n            style={{\n              margin: \"30px 10px\",\n              borderBottom: \"1px solid\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n              }}\n            >\n              <div>\n                <img\n                  style={{\n                    height: \"200px\",\n                    width: \"200px\",\n                    borderRadius: \"50%\",\n                  }}\n                  src={state ? state.pic : \"loading..\"}\n                />\n                <div className=\"file-field input-field\">\n                  <div className=\"btn\" style={{ marginBottom: \"1rem\" }}>\n                    <span>Update Profile Image</span>\n                    <input\n                      type=\"file\"\n                      onChange={(e) => updatePhoto(e.target.files[0])}\n                    />\n                  </div>\n                  <div className=\"file-path-wrapper\" style={{ width: \"0\" }}>\n                    <input className=\"file-path validate\" type=\"text\" />\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h4>{state ? state.name : \"\"}</h4>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    width: \"110%\",\n                  }}\n                >\n                  <h6>{data.length} Posts</h6>\n                  <h6>{state.followers.length} Followers</h6>\n                  <h6>{state.following.length} Following</h6>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"gallery\">\n            {data.map((item) => {\n              return <img className=\"item\" src={item.photo} key={item._id} />;\n            })}\n          </div> */}\n          <div className=\"home container\">\n            {data.map((item) => {\n              return (\n                <div className=\"card home-card\" key={item._id}>\n                  <h5 style={{ padding: \"10px 15px\" }}>\n                    <Link\n                      to={\n                        item.postedBy._id !== state._id\n                          ? `/profile/` + item.postedBy._id\n                          : \"/profile\"\n                      }\n                      style={{\n                        color: \"black\",\n                      }}\n                      className=\"namePost\"\n                    >\n                      <img\n                        src={state.pic}\n                        style={{\n                          height: \"40px\",\n                          width: \"40px\",\n                          borderRadius: \"50%\",\n                          marginRight: \"10px\",\n                          padding: \"0\",\n                          marginBottom: \"-15px\",\n                        }}\n                      />\n                      {item.postedBy.name}\n                    </Link>{\" \"}\n                    {item.postedBy._id == state._id ? (\n                      <i\n                        className=\"material-icons\"\n                        style={{ float: \"right\", cursor: \"pointer\" }}\n                        onClick={(e) => deletePost(item._id)}\n                      >\n                        delete\n                      </i>\n                    ) : (\n                      \"\"\n                    )}\n                  </h5>\n                  <hr></hr>\n                  <div style={{ paddingLeft: \"25px\" }}>\n                    <p style={{ fontSize: \"21px\" }}>\n                      <b>{item.title}</b>\n                    </p>\n\n                    <p style={{ fontSize: \"18px\" }}>{item.description}</p>\n                  </div>\n                  <div className=\"card-image\">\n                    <img src={item.photo} />\n                  </div>\n                  <div className=\"card-content\">\n                    <i\n                      className=\"material-icons\"\n                      style={{ cursor: \"pointer\", marginRight: \"15px\" }}\n                    >\n                      favorite_border\n                    </i>\n                    {item.likes.includes(state._id) ? (\n                      <i\n                        className=\"material-icons\"\n                        onClick={() => unlikePost(item._id)}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        thumb_down\n                      </i>\n                    ) : (\n                      <i\n                        className=\"material-icons\"\n                        onClick={() => likePost(item._id)}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        thumb_up\n                      </i>\n                    )}\n\n                    <h6>{item.likes.length} Likes</h6>\n\n                    <b>\n                      <h6 style={{ fontWeight: \"900\" }}>\n                        <u>Comments</u>\n                      </h6>\n                    </b>\n                    {item.comments.map((comment) => {\n                      return (\n                        <h6 key={comment._id}>\n                          <span style={{ fontWeight: \"700\" }}>\n                            {comment.postedBy.name}\n                          </span>\n                          {\" : \"}\n                          {comment.text}\n                          {(item.postedBy._id == state._id ||\n                            comment.postedBy._id == state._id) && (\n                            <i\n                              className=\"material-icons\"\n                              style={{ float: \"right\", cursor: \"pointer\" }}\n                              onClick={(e) =>\n                                deleteComment(item._id, comment._id)\n                              }\n                            >\n                              delete\n                            </i>\n                          )}\n                        </h6>\n                      );\n                    })}\n                    <form\n                      onSubmit={(e) => {\n                        e.preventDefault();\n                        makeComment(e.target[0].value, item._id);\n                      }}\n                    >\n                      <input type=\"text\" placeholder=\"Add comment here\" />\n                    </form>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        <h2>Loading....</h2>\n      )}\n    </>\n  );\n}\n\nexport default Profile;\n",["66","67"],"/home/sanchit/projektHouse/server/client/src/components/screens/CreatePost.js",["68"],"/home/sanchit/projektHouse/server/client/src/components/screens/Home.js",["69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\n\nfunction Home() {\n  const [data, setData] = useState([]);\n  const [creators, setCreators] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    fetch(\"/allpost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setData(result.posts);\n      });\n  }, [creators]);\n  useEffect(() => {\n    fetch(\"/top-creators\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result.users);\n        setCreators(result.users);\n      });\n  }, []);\n  const likePost = (id) => {\n    fetch(\"/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (result._id == item._id) return result;\n          else return item;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const unlikePost = (id) => {\n    fetch(\"/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (result._id == item._id) return result;\n          else return item;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const makeComment = (text, postId) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId,\n        text,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (result._id == item._id) return result;\n          else return item;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const deletePost = (postId) => {\n    fetch(`/deletepost/${postId}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.filter((item) => {\n          return item._id != result._id;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const deleteComment = (postId, commentId) => {\n    fetch(`/deletecomment/${postId}/${commentId}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (result._id == item._id) return result;\n          else return item;\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"home container\">\n      <h4>Top Creators</h4>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {creators.slice(0, 4).map((creator) => {\n          return (\n            <div className=\"row\" style={{ width: \"150px\" }}>\n              <div className=\"col\">\n                <div className=\"card\" style={{ width: \"200px\" }}>\n                  <div className=\"card-image\">\n                    <img\n                      src={creator.pic}\n                      style={{ height: \"163px\", width: \"100%\" }}\n                    />\n\n                    <Link\n                      to={\n                        creator._id !== state._id\n                          ? `/profile/` + creator._id\n                          : \"/profile\"\n                      }\n                      className=\"btn-floating halfway-fab waves-effect waves-light red\"\n                    >\n                      <i className=\"material-icons\">add</i>\n                    </Link>\n                  </div>\n                  <div className=\"card-content\">\n                    <span className=\"card-title\" style={{ color: \"black\" }}>\n                      {creator.name}\n                    </span>\n                    <p>{creator.email}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <h4>Feed</h4>\n      {data.map((item) => {\n        return (\n          <div\n            className=\"card home-card\"\n            key={item._id}\n            style={{ borderRadius: \"12px \" }}\n          >\n            <h5 style={{ padding: \"10px 15px\" }}>\n              <Link\n                to={\n                  item.postedBy._id !== state._id\n                    ? `/profile/` + item.postedBy._id\n                    : \"/profile\"\n                }\n                style={{\n                  color: \"black\",\n                }}\n              >\n                <img\n                  src={item.postedBy.pic}\n                  style={{\n                    height: \"40px\",\n                    width: \"40px\",\n                    borderRadius: \"50%\",\n                    marginRight: \"10px\",\n                    padding: \"0\",\n                    marginBottom: \"-15px\",\n                  }}\n                />\n                {item.postedBy.name}\n              </Link>{\" \"}\n              {item.postedBy._id == state._id ? (\n                <i\n                  className=\"material-icons\"\n                  style={{ float: \"right\", cursor: \"pointer\" }}\n                  onClick={(e) => deletePost(item._id)}\n                >\n                  delete\n                </i>\n              ) : (\n                \"\"\n              )}\n            </h5>\n            <hr></hr>\n            <div style={{ paddingLeft: \"25px\" }}>\n              <p style={{ fontSize: \"21px\" }}>\n                <b>{item.title}</b>\n              </p>\n\n              <p style={{ fontSize: \"18px\" }}>{item.description}</p>\n            </div>\n            <div className=\"card-image\">\n              <img src={item.photo} />\n            </div>\n            <div className=\"card-content\">\n              <i\n                className=\"material-icons\"\n                style={{ cursor: \"pointer\", marginRight: \"15px\" }}\n              >\n                favorite_border\n              </i>\n              {item.likes.includes(state._id) ? (\n                <i\n                  className=\"material-icons\"\n                  onClick={() => unlikePost(item._id)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  thumb_down\n                </i>\n              ) : (\n                <i\n                  className=\"material-icons\"\n                  onClick={() => likePost(item._id)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  thumb_up\n                </i>\n              )}\n\n              <h6>{item.likes.length} Likes</h6>\n\n              <b>\n                <h6 style={{ fontWeight: \"900\" }}>\n                  <u>Comments</u>\n                </h6>\n              </b>\n              {item.comments.map((comment) => {\n                return (\n                  <h6 key={comment._id}>\n                    <span style={{ fontWeight: \"700\" }}>\n                      {comment.postedBy.name}\n                    </span>\n                    {\" : \"}\n                    {comment.text}\n                    {(item.postedBy._id == state._id ||\n                      comment.postedBy._id == state._id) && (\n                      <i\n                        className=\"material-icons\"\n                        style={{ float: \"right\", cursor: \"pointer\" }}\n                        onClick={(e) => deleteComment(item._id, comment._id)}\n                      >\n                        delete\n                      </i>\n                    )}\n                  </h6>\n                );\n              })}\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  makeComment(e.target[0].value, item._id);\n                }}\n              >\n                <input type=\"text\" placeholder=\"Add comment here\" />\n              </form>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n","/home/sanchit/projektHouse/server/client/src/components/screens/UserProfile.js",["81","82","83","84","85","86","87","88","89","90","91","92","93"],"/home/sanchit/projektHouse/server/client/src/components/screens/SubsPosts.js",["94","95","96","97","98","99","100","101","102","103","104"],"/home/sanchit/projektHouse/server/client/src/components/Navbar.js",[],["105","106"],"/home/sanchit/projektHouse/server/client/src/components/screens/Login.js",["107","108","109"],"import React, { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\nimport { UserContext } from \"../../App\";\n\nfunction Login() {\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const PostData = (e) => {\n    e.preventDefault();\n    if (\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        email\n      )\n    ) {\n      M.toast({\n        html: \"Invalid Email address\",\n        classes: \"c62828 red darken-3\",\n      });\n      return;\n    }\n    fetch(\"/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.error) {\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n        } else {\n          localStorage.setItem(\"jwt\", data.token);\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\n          dispatch({ type: \"USER\", payload: data.user });\n          M.toast({ html: \"Signed In Successfully\", classes: \" green\" });\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"container\">\n      <div style={{ marginTop: \"4rem\" }} className=\"row\">\n        <div className=\"col s8 offset-s2\">\n          <Link to=\"/\" className=\"btn-flat waves-effect\">\n            <i className=\"material-icons left\">keyboard_backspace</i>\n            Back to home\n          </Link>\n          <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <h4>\n              <b>Login</b> below\n            </h4>\n            <p className=\"grey-text text-darken-1\">\n              Don't have an account? <Link to=\"/register\">Register</Link>\n            </p>\n          </div>\n          <form noValidate>\n            <div className=\"input-field col s12\">\n              <input\n                id=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                id=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <button\n                style={{\n                  width: \"150px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                  marginTop: \"1rem\",\n                }}\n                type=\"submit\"\n                className=\"btn btn-large waves-effect hoverable #ff5252 red accent-1\"\n                onClick={PostData}\n              >\n                Login\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n",["110","111"],"/home/sanchit/projektHouse/server/client/src/components/screens/Register.js",["112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":55,"column":6,"nodeType":"123","endLine":55,"endColumn":13,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":73,"column":26,"nodeType":"127","messageId":"128","endLine":73,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":96,"column":26,"nodeType":"127","messageId":"128","endLine":96,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":120,"column":26,"nodeType":"127","messageId":"128","endLine":120,"endColumn":28},{"ruleId":"125","severity":1,"message":"129","line":140,"column":27,"nodeType":"127","messageId":"128","endLine":140,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":159,"column":26,"nodeType":"127","messageId":"128","endLine":159,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":185,"column":17,"nodeType":"132","endLine":192,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":243,"column":23,"nodeType":"132","endLine":253,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":256,"column":40,"nodeType":"127","messageId":"128","endLine":256,"endColumn":42},{"ruleId":"130","severity":1,"message":"131","line":277,"column":21,"nodeType":"132","endLine":277,"endColumn":45},{"ruleId":"125","severity":1,"message":"126","line":319,"column":47,"nodeType":"127","messageId":"128","endLine":319,"endColumn":49},{"ruleId":"125","severity":1,"message":"126","line":320,"column":50,"nodeType":"127","messageId":"128","endLine":320,"endColumn":52},{"ruleId":"115","replacedBy":"133"},{"ruleId":"117","replacedBy":"134"},{"ruleId":"121","severity":1,"message":"135","line":37,"column":6,"nodeType":"123","endLine":37,"endColumn":11,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":8,"column":18,"nodeType":"139","messageId":"140","endLine":8,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":46,"column":26,"nodeType":"127","messageId":"128","endLine":46,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":69,"column":26,"nodeType":"127","messageId":"128","endLine":69,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":93,"column":26,"nodeType":"127","messageId":"128","endLine":93,"endColumn":28},{"ruleId":"125","severity":1,"message":"129","line":113,"column":27,"nodeType":"127","messageId":"128","endLine":113,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":132,"column":26,"nodeType":"127","messageId":"128","endLine":132,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":151,"column":21,"nodeType":"132","endLine":154,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":198,"column":17,"nodeType":"132","endLine":208,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":211,"column":34,"nodeType":"127","messageId":"128","endLine":211,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":232,"column":15,"nodeType":"132","endLine":232,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":274,"column":41,"nodeType":"127","messageId":"128","endLine":274,"endColumn":43},{"ruleId":"125","severity":1,"message":"126","line":275,"column":44,"nodeType":"127","messageId":"128","endLine":275,"endColumn":46},{"ruleId":"121","severity":1,"message":"141","line":22,"column":6,"nodeType":"123","endLine":22,"endColumn":8,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"129","line":75,"column":28,"nodeType":"127","messageId":"128","endLine":75,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":102,"column":26,"nodeType":"127","messageId":"128","endLine":102,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":125,"column":26,"nodeType":"127","messageId":"128","endLine":125,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":149,"column":26,"nodeType":"127","messageId":"128","endLine":149,"endColumn":28},{"ruleId":"125","severity":1,"message":"129","line":169,"column":27,"nodeType":"127","messageId":"128","endLine":169,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":188,"column":26,"nodeType":"127","messageId":"128","endLine":188,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":210,"column":15,"nodeType":"132","endLine":213,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":278,"column":23,"nodeType":"132","endLine":288,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":291,"column":40,"nodeType":"127","messageId":"128","endLine":291,"endColumn":42},{"ruleId":"130","severity":1,"message":"131","line":312,"column":21,"nodeType":"132","endLine":312,"endColumn":45},{"ruleId":"125","severity":1,"message":"126","line":354,"column":47,"nodeType":"127","messageId":"128","endLine":354,"endColumn":49},{"ruleId":"125","severity":1,"message":"126","line":355,"column":50,"nodeType":"127","messageId":"128","endLine":355,"endColumn":52},{"ruleId":"137","severity":1,"message":"138","line":7,"column":18,"nodeType":"139","messageId":"140","endLine":7,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":34,"column":26,"nodeType":"127","messageId":"128","endLine":34,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":57,"column":26,"nodeType":"127","messageId":"128","endLine":57,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":81,"column":26,"nodeType":"127","messageId":"128","endLine":81,"endColumn":28},{"ruleId":"125","severity":1,"message":"129","line":101,"column":27,"nodeType":"127","messageId":"128","endLine":101,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":120,"column":26,"nodeType":"127","messageId":"128","endLine":120,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":143,"column":17,"nodeType":"132","endLine":153,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":156,"column":34,"nodeType":"127","messageId":"128","endLine":156,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":170,"column":15,"nodeType":"132","endLine":170,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":213,"column":41,"nodeType":"127","messageId":"128","endLine":213,"endColumn":43},{"ruleId":"125","severity":1,"message":"126","line":214,"column":44,"nodeType":"127","messageId":"128","endLine":214,"endColumn":46},{"ruleId":"115","replacedBy":"143"},{"ruleId":"117","replacedBy":"144"},{"ruleId":"137","severity":1,"message":"145","line":7,"column":11,"nodeType":"139","messageId":"140","endLine":7,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":15,"column":18,"nodeType":"148","messageId":"149","endLine":15,"endColumn":19,"suggestions":"150"},{"ruleId":"146","severity":1,"message":"147","line":15,"column":43,"nodeType":"148","messageId":"149","endLine":15,"endColumn":44,"suggestions":"151"},{"ruleId":"115","replacedBy":"152"},{"ruleId":"117","replacedBy":"153"},{"ruleId":"121","severity":1,"message":"154","line":17,"column":6,"nodeType":"123","endLine":17,"endColumn":11,"suggestions":"155"},{"ruleId":"146","severity":1,"message":"147","line":37,"column":18,"nodeType":"148","messageId":"149","endLine":37,"endColumn":19,"suggestions":"156"},{"ruleId":"146","severity":1,"message":"147","line":37,"column":43,"nodeType":"148","messageId":"149","endLine":37,"endColumn":44,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],["158"],["159"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["160"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["158"],["159"],"React Hook useEffect has missing dependencies: 'description', 'history', and 'title'. Either include them or remove the dependency array.",["161"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["162"],["158"],["159"],"'state' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["163","164"],["165","166"],["158"],["159"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["167"],["168","169"],["170","171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"messageId":"178","fix":"179","desc":"180"},{"messageId":"181","fix":"182","desc":"183"},{"messageId":"178","fix":"184","desc":"180"},{"messageId":"181","fix":"185","desc":"183"},{"desc":"186","fix":"187"},{"messageId":"178","fix":"188","desc":"180"},{"messageId":"181","fix":"189","desc":"183"},{"messageId":"178","fix":"190","desc":"180"},{"messageId":"181","fix":"191","desc":"183"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"192","text":"193"},"Update the dependencies array to be: [description, history, title, url]",{"range":"194","text":"195"},"Update the dependencies array to be: [userId]",{"range":"196","text":"197"},"removeEscape",{"range":"198","text":"199"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"200","text":"201"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"202","text":"199"},{"range":"203","text":"201"},"Update the dependencies array to be: [uploadFields, url]",{"range":"204","text":"205"},{"range":"206","text":"199"},{"range":"207","text":"201"},{"range":"208","text":"199"},{"range":"209","text":"201"},[1713,1720],"[dispatch, image, state]",[1041,1046],"[description, history, title, url]",[688,690],"[userId]",[456,457],"",[456,456],"\\",[481,482],[481,481],[505,510],"[uploadFields, url]",[1106,1107],[1106,1106],[1131,1132],[1131,1131]]